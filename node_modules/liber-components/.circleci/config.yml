version: 2 # use CircleCI 2.0
jobs:
  build:
    docker:
      - image: circleci/node:10
    environment:
      TZ: "/usr/share/zoneinfo/America/Sao_Paulo"
    steps:
      - checkout # special step to check out source code to working directory
      - run: sudo apt-get update
      - run: sudo apt-get install apt-transport-https
      - run: curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
      - run: echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      - run: sudo apt-get update && sudo apt-get install yarn && yarn
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run React Tests
          command: yarn jest --no-cache --runInBand

  deploy:
    docker:
      - image: circleci/node:10
    environment:
     NPM_TOKEN: "4fe08129-2950-49c2-9f04-2961c0433969"
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install apt-transport-https
      - run: curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
      - run: echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      - run: sudo apt-get update && sudo apt-get install yarn && yarn
      - run:
          name: Deploy Storybook
          command: yarn deploy-storybook -- --ci

  release:
    docker:
      - image: circleci/node:10
    environment:
     NPM_TOKEN: "4fe08129-2950-49c2-9f04-2961c0433969"
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install apt-transport-https
      - run: curl -fsSL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
      - run: echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      - run: sudo apt-get update && sudo apt-get install yarn && yarn
      # Run optional required steps before releasing
      # - run: npm run build-script
      - run: yarn semantic-release

workflows:
  version: 2
  test_and_release:
    jobs:
      - build
      - deploy:
          requires:
              - build
          filters:
            branches:
              only:
                - master
      - release:
          requires:
            - build