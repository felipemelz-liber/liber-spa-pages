// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PendingAdvances styled components test should render AdvancesContainer correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-EHOje",
        "isStatic": false,
        "rules": Array [
          "
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin: -8px;
  box-sizing: content-box;
  width: calc(100% - 16px);
  & > ",
          ".sc-ifAKCX",
          " {
    padding: 8px;
  }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-EHOje",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render Card correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [
        [Function],
      ],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bZQynM",
        "isStatic": false,
        "rules": Array [
          "
  padding: 20px 16px;
  padding-bottom: 8px;
  width: 100%;
  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);
  border: solid 1px #cdd7df;
  align-items: flex-start;
",
        ],
      },
      "displayName": "Styled(Cards__Card)",
      "foldedComponentIds": Array [
        "Cards__Card-sc-1kn0psw-0",
      ],
      "render": [Function],
      "styledComponentId": "sc-bZQynM",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render EyeIcon correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [
        [Function],
      ],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  cursor: pointer;
",
        ],
      },
      "displayName": "Styled(Icon)",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "className": [Function],
        "color": [Function],
        "horizontal": [Function],
        "inStack": [Function],
        "path": [Function],
        "rotate": [Function],
        "size": [Function],
        "spin": [Function],
        "style": [Function],
        "vertical": [Function],
      },
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "color": "currentColor",
          "horizontal": false,
          "rotate": 0,
          "size": null,
          "spin": false,
          "vertical": false,
        },
        "displayName": "Icon",
        "propTypes": Object {
          "className": [Function],
          "color": [Function],
          "horizontal": [Function],
          "inStack": [Function],
          "path": [Function],
          "rotate": [Function],
          "size": [Function],
          "spin": [Function],
          "style": [Function],
          "vertical": [Function],
        },
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render FaceLabel correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dnqmqq",
        "isStatic": false,
        "rules": Array [
          "
  font-family: Roboto;
  font-size: 12px;
  font-weight: 500;
  font-stretch: normal;
  font-style: normal;
  line-height: 2.45;
  letter-spacing: 0.05px;
  text-align: left;
  color: #405f71;
  margin-top: 16px;
",
        ],
      },
      "displayName": "styled.span",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-dnqmqq",
      "target": "span",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render Footer correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": false,
        "rules": Array [
          "
  border-top: solid 1px #cdd7df;
  display: flex;
  justify-content: flex-end;
  padding-top: 8px;
  width: 100%;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render Item correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-ifAKCX",
        "isStatic": false,
        "rules": Array [
          "
  display: flex;
  flex-basis: 40%;
  ",
          "@media (min-width:",
          "992px",
          "){",
          "
    flex-basis: 33%;
  ",
          "}",
          "
  box-sizing: border-box;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-ifAKCX",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render NetValue correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-iwsKbI",
        "isStatic": false,
        "rules": Array [
          "
  font-family: Roboto;
  font-size: 24px;
  font-weight: normal;
  font-stretch: normal;
  font-style: normal;
  line-height: 1.22;
  letter-spacing: 0.1px;
  text-align: left;
  color: #6287a7;
",
        ],
      },
      "displayName": "styled.span",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-iwsKbI",
      "target": "span",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render Row correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-gzVnrw",
        "isStatic": false,
        "rules": Array [
          "
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  margin-bottom: 24px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-gzVnrw",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render Section correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bxivhb",
        "isStatic": false,
        "rules": Array [
          "
  display: flex;
  flex-direction: column;
  margin-bottom: 56px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bxivhb",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render SubTitle correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
  font-family: Roboto;
  font-size: 21px;
  font-weight: 500;
  font-stretch: normal;
  font-style: normal;
  line-height: 1.4;
  letter-spacing: 0.08px;
  text-align: left;
  color: #4b6f85;
  margin-bottom: 24px;
",
        ],
      },
      "displayName": "styled.span",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "span",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`PendingAdvances styled components test should render ValueContainer correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htoDjs",
        "isStatic": false,
        "rules": Array [
          "
  display: flex;
  flex-direction: column;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htoDjs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;
