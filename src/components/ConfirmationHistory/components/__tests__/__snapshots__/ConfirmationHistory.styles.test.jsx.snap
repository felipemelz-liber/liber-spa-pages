// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing ConfirmationHistory styles renders ConfirmationHistoryContainer correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": false,
        "rules": Array [
          "
  width: 100%;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing ConfirmationHistory styles renders Global correctly 1`] = `
<ContextConsumer>
  <Component />
</ContextConsumer>
`;

exports[`Testing ConfirmationHistory styles renders Loading correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-ifAKCX",
        "isStatic": false,
        "rules": Array [
          "
  width: 200px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%);
",
        ],
      },
      "displayName": "Styled(Bunny)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-ifAKCX",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing ConfirmationHistory styles renders LoadingBlock correctly while loading 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bxivhb",
        "isStatic": false,
        "rules": Array [
          "
  flex-grow: 1;
  display: flex;
  opacity: ",
          [Function],
          ";
  pointer-events: ",
          [Function],
          ";
  transition: opacity 150ms ease-in-out;
  display: inherit;
  flex-direction: inherit;
  position: inherit;
  min-height: ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bxivhb",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  loading={1}
/>
`;

exports[`Testing ConfirmationHistory styles renders LoadingBlock correctly while not loading 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bxivhb",
        "isStatic": false,
        "rules": Array [
          "
  flex-grow: 1;
  display: flex;
  opacity: ",
          [Function],
          ";
  pointer-events: ",
          [Function],
          ";
  transition: opacity 150ms ease-in-out;
  display: inherit;
  flex-direction: inherit;
  position: inherit;
  min-height: ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bxivhb",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  loading={0}
/>
`;

exports[`Testing ConfirmationHistory styles renders LoadingBlock correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bxivhb",
        "isStatic": false,
        "rules": Array [
          "
  flex-grow: 1;
  display: flex;
  opacity: ",
          [Function],
          ";
  pointer-events: ",
          [Function],
          ";
  transition: opacity 150ms ease-in-out;
  display: inherit;
  flex-direction: inherit;
  position: inherit;
  min-height: ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bxivhb",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing ConfirmationHistory styles renders MdHelpCircleStyled correctly 1`] = `
<styled.div>
  <Styled(HelpCircle) />
</styled.div>
`;

exports[`Testing ConfirmationHistory styles renders ScreenTitle correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
  font-family: Roboto;
  font-size: 32px;
  font-weight: bold;
  font-stretch: normal;
  font-style: normal;
  line-height: 1.41;
  letter-spacing: 0.13px;
  text-align: left;
  color: #009dff;
",
        ],
      },
      "displayName": "styled.span",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "span",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing ConfirmationHistory styles renders TitleContainer correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  margin-top: 32px;
  margin-bottom: 36px;
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;
